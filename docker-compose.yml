services:
  vllm:
    image: ghcr.io/mistralai/mistral-vllm:latest
    container_name: devstral-vllm
    command: >
      vllm serve /models/devstral
      --tokenizer-mode mistral
      --config-format mistral
      --load-format mistral
      --tool-call-parser mistral
      --enable-auto-tool-choice
      --host 0.0.0.0
      --port 8000
      --tensor-parallel-size 1
    ports:
      - "8000:8000"
    volumes:
      - ./volumes/huggingface/hub/models--mistralai--Devstral-Small-2507:/models/devstral
    environment:
      - MODEL_NAME=${VLLM_MODEL}
    deploy:
      resources:
        limits:
          cpus: "${VLLM_CPU_LIMIT}"
          memory: "${VLLM_MEMORY_LIMIT}"
        reservations:
          devices:
            - capabilities: [gpu]
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:8000/v1/models || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    restart: unless-stopped
  redis:
    build: ./redis
    container_name: devstral-redis
    ports:
      - "6379:6379"
    environment:
      - ADMIN_USERNAME=${ADMIN_USERNAME}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - ADMIN_USER_ID=${ADMIN_USER_ID}
      - JWT_SECRET=${JWT_SECRET}
    volumes:
      - ./volumes/redis_data:/data
      - ./volumes/redis_logs:/var/log/redis
    networks:
      - devstral-network
    deploy:
      resources:
        limits:
          cpus: ${REDIS_CPU}
          memory: ${REDIS_MEMORY}
        reservations:
          cpus: ${REDIS_CPU}
          memory: ${REDIS_MEMORY}
    restart: unless-stopped
    healthcheck:
      test: [
        "CMD-SHELL",
        "redis-cli EXISTS user:${ADMIN_USERNAME} || exit 1"
      ]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s

  nginx:
    build: ./nginx
    container_name: devstral-nginx
    ports:
      - "80:80"
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - VLLM_URL=${VLLM_URL}
      - VLLM_MODEL=${VLLM_MODEL}
      - MIN_PASSWORD_LENGTH=${MIN_PASSWORD_LENGTH}
    volumes:
      - ./volumes/nginx_cache:/var/cache/nginx
      - ./volumes/nginx_logs:/var/log/nginx
    depends_on:
      vllm:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - devstral-network
    deploy:
      resources:
        limits:
          cpus: ${NGINX_CPU}
          memory: ${NGINX_MEMORY}
        reservations:
          cpus: ${NGINX_CPU}
          memory: ${NGINX_MEMORY}
    restart: unless-stopped

networks:
  devstral-network:
    driver: bridge