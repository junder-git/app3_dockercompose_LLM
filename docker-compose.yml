version: '3.8'

services:
  # Nginx Reverse Proxy
  nginx:
    build: ./nginx
    container_name: ai-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/static:/usr/share/nginx/html/static:ro  # Mount static files
      - nginx_cache:/var/cache/nginx
    depends_on:
      - quart-app
    networks:
      - ai-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    restart: unless-stopped
  
  # Ollama Model Server with GPU acceleration  
  ollama:
    build:
      context: ./ollama
      dockerfile: Dockerfile
    container_name: ai-ollama
    volumes:
      - ollama_models:/root/.ollama/models
      - ./ollama/scripts:/scripts
      - ./ollama/Modelfile:/root/Modelfile
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_MODEL=${OLLAMA_MODEL:-deepseek-coder-v2:16b}
      - OLLAMA_KEEP_ALIVE=5m
      - OLLAMA_NUM_PARALLEL=1
      - OLLAMA_MAX_LOADED_MODELS=1
      #- OLLAMA_VERBOSE=0  # Suppress verbose logging
      #- OLLAMA_NOPRUNE=1  # Prevent token pruning
      #- OLLAMA_DEBUG=false  # Disable debug mode
    ports:
      - "11434:11434"
    networks:
      - ai-network
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: ${OLLAMA_MEMORY_LIMIT:-16G}
        reservations:
          cpus: '1.0'
          memory: ${OLLAMA_MEMORY_RESERVATION:-8G}
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    runtime: nvidia
    restart: unless-stopped
  
  # Web UI Application
  quart-app:
    build:
      context: ./quart-app
      dockerfile: Dockerfile
    container_name: ai-quart-app
    environment:
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - OLLAMA_URL=${OLLAMA_URL:-http://ollama:11434}
      - OLLAMA_MODEL=${OLLAMA_MODEL:-deepseek-coder-v2:16b}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - ADMIN_USERNAME=${ADMIN_USERNAME:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin123}
      - MODEL_TEMPERATURE=${MODEL_TEMPERATURE:-0.7}
      - MODEL_TOP_P=${MODEL_TOP_P:-0.9}
      - MODEL_MAX_TOKENS=${MODEL_MAX_TOKENS:-2048}
      - MODEL_TIMEOUT=${MODEL_TIMEOUT:-300}
      - RATE_LIMIT_MESSAGES_PER_MINUTE=${RATE_LIMIT_MESSAGES_PER_MINUTE:-10}
      - CHAT_CACHE_TTL_SECONDS=${CHAT_CACHE_TTL_SECONDS:-3600}
      - CHAT_HISTORY_LIMIT=${CHAT_HISTORY_LIMIT:-100}
      - SESSION_LIFETIME_DAYS=${SESSION_LIFETIME_DAYS:-7}
      - SECURE_COOKIES=${SECURE_COOKIES:-false}
    volumes:
      - ./quart-app:/app
    depends_on:
      - redis
      - ollama
    networks:
      - ai-network
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 8G
        reservations:
          cpus: '0.5'
          memory: 4G
    restart: unless-stopped
  
  #Database in JSON format with data persist docker volume and conf
  redis:
    build: ./redis
    container_name: ai-redis
    volumes:
      - redis_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    ports:
      - "6379:6379"
    networks:
      - ai-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 2G
        reservations:
          cpus: '0.25'
          memory: 1G
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  ai-network:
    driver: bridge

volumes:
  nginx_cache:
  ollama_models:
  redis_data: