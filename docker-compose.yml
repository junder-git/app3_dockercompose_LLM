services:
  # Open WebUI with bundled Ollama (GPU enabled) - Optimized for 24B models
  open-webui:
    image: ghcr.io/open-webui/open-webui:ollama
    container_name: ai-open-webui-ollama
    environment:
      # GPU Configuration
      - NVIDIA_VISIBLE_DEVICES=${NVIDIA_VISIBLE_DEVICES}
      - CUDA_VISIBLE_DEVICES=0
      - CUDA_DEVICE_ORDER=PCI_BUS_ID
      
      # Security & Authentication
      - WEBUI_SECRET_KEY=${SECRET_KEY}
      - WEBUI_AUTH=true
      - DEFAULT_USER_ROLE=user
      - ENABLE_SIGNUP=${ENABLE_SIGNUP}
      - ENABLE_LOGIN_FORM=true
      
      # Default admin user configuration
      - DEFAULT_USER_EMAIL=${DEFAULT_USER_EMAIL}
      - DEFAULT_USER_NAME=${DEFAULT_USER_NAME}
      - DEFAULT_USER_PASSWORD=${DEFAULT_USER_PASSWORD}
      
      # CORS Configuration for production
      - CORS_ALLOW_ORIGIN=${WEBUI_URL}
      - WEBUI_URL=${WEBUI_URL}
      
      # Suppress warnings
      - USER_AGENT=Open-WebUI/1.0 (ai.junder.uk)
      - LANGCHAIN_TRACING_V2=false
      
      # OLLAMA PERFORMANCE OPTIMIZATIONS
      - OLLAMA_NUM_PARALLEL=${OLLAMA_NUM_PARALLEL}
      - OLLAMA_MAX_LOADED_MODELS=${OLLAMA_MAX_LOADED_MODELS}
      - OLLAMA_MAX_QUEUE=${OLLAMA_MAX_QUEUE}
      - OLLAMA_FLASH_ATTENTION=${OLLAMA_FLASH_ATTENTION}
      - OLLAMA_HOST=0.0.0.0:11434
      - OLLAMA_KEEP_ALIVE=${OLLAMA_KEEP_ALIVE}
      - OLLAMA_NOHISTORY=false
      - OLLAMA_LOAD_TIMEOUT=${OLLAMA_LOAD_TIMEOUT}
      - OLLAMA_REQUEST_TIMEOUT=${OLLAMA_REQUEST_TIMEOUT}
      - OLLAMA_MAX_VRAM=${MAX_VRAM}
      
      # ADVANCED PERFORMANCE SETTINGS
      - OLLAMA_CONTEXT_SIZE=${OLLAMA_CONTEXT_SIZE}
      - OLLAMA_BATCH_SIZE=${OLLAMA_BATCH_SIZE}
      - OLLAMA_LOW_VRAM=${OLLAMA_LOW_VRAM}
      - OLLAMA_GPU_LAYERS=${OLLAMA_GPU_LAYERS}
      - OLLAMA_MAIN_GPU=${OLLAMA_MAIN_GPU}
      - OLLAMA_TENSOR_SPLIT=${OLLAMA_TENSOR_SPLIT}
      - OLLAMA_PRELOAD_MODEL=${OLLAMA_PRELOAD_MODEL}
      - OLLAMA_OFFLOAD_KQV=${OLLAMA_OFFLOAD_KQV}
      
      # CPU/THREADING OPTIMIZATIONS
      - OMP_NUM_THREADS=${OMP_NUM_THREADS}
      - GOMP_CPU_AFFINITY=${GOMP_CPU_AFFINITY}
      - MKL_NUM_THREADS=${OMP_NUM_THREADS}
      - OPENBLAS_NUM_THREADS=${OMP_NUM_THREADS}
      - VECLIB_MAXIMUM_THREADS=${OMP_NUM_THREADS}
      
      # MEMORY OPTIMIZATIONS
      - PYTORCH_CUDA_ALLOC_CONF=max_split_size_mb:1024,garbage_collection_threshold:0.6
      - MALLOC_ARENA_MAX=${MALLOC_ARENA_MAX}
      
      # PERFORMANCE TUNING
      - OLLAMA_RUNNERS_DIR=/tmp/ollama_runners
      - OLLAMA_TMPDIR=/tmp/ollama_tmp
      
    volumes:
      - ollama_data:/root/.ollama
      - open_webui_data:/app/backend/data
      # Mount tmpfs for high-speed temporary operations
      - type: tmpfs
        target: /tmp/ollama_runners
        tmpfs:
          size: 4G
      - type: tmpfs
        target: /tmp/ollama_tmp
        tmpfs:
          size: 8G
    networks:
      - ai-network
    deploy:
      resources:
        limits:
          cpus: '8.0'
          memory: ${OLLAMA_MEMORY_LIMIT}
        reservations:
          cpus: '6.0'
          memory: ${OLLAMA_MEMORY_RESERVATION}
    runtime: nvidia
    restart: unless-stopped
    # No ports exposed - only accessible through NGINX
    expose:
      - "8080"
      - "11434"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 300s
    # CPU performance tuning
    sysctls:
      - net.core.somaxconn=65535
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65535
        hard: 65535

  # NGINX Reverse Proxy (Cloudflare SSL termination) - Optimized for large responses
  nginx:
    build: ./nginx
    container_name: ai-nginx
    ports:
      - "80:80"
    depends_on:
      - open-webui
    networks:
      - ai-network
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '0.5'
          memory: 1G
    restart: unless-stopped
    # Optimize for large AI responses
    sysctls:
      - net.core.somaxconn=32768
      - net.ipv4.tcp_max_syn_backlog=32768

networks:
  ai-network:
    driver: bridge
    internal: false
    driver_opts:
      com.docker.network.driver.mtu: 1500

volumes:
  ollama_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${OLLAMA_DATA_PATH:-./ollama_data}
  open_webui_data:
    driver: local