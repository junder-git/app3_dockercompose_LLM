user nginx;
worker_processes auto;
worker_rlimit_nofile 65536;
pid /var/run/nginx.pid;
error_log /var/log/nginx/error.log warn;

events {
    worker_connections 8192;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;
    client_max_body_size 10M;
    client_body_buffer_size 16k;
    client_header_buffer_size 2k;
    large_client_header_buffers 4 8k;
    
    # GZIP Configuration
    gzip on;
    gzip_vary on;
    gzip_min_length 256;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        application/json
        application/xml
        application/javascript
        text/javascript
        text/html;

    # CORS Headers for API calls
    map $request_method $cors_method {
        OPTIONS 11;
        GET     1;
        POST    1;
        PUT     1;
        DELETE  1;
        default 0;
    }

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=100r/m;
    limit_req_zone $binary_remote_addr zone=redis_limit:10m rate=200r/m;
    limit_req_zone $binary_remote_addr zone=ollama_limit:10m rate=50r/m;
    
    limit_req_status 429;

    # Upstream definitions
    upstream ollama_backend {
        server ollama:11434;
    }

    # Main server block
    server {
        listen 80 default_server;
        server_name localhost ai.junder.uk _;
        
        root /usr/share/nginx/html;
        index index.html;

        # Security Headers
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # =====================================================
        # STATIC FILES
        # =====================================================
        
        # HTML Pages
        location / {
            try_files $uri $uri/ /index.html;
            expires 1h;
            add_header Cache-Control "public, max-age=3600";
        }
        
        location ~* \.(html)$ {
            expires 1h;
            add_header Cache-Control "public, max-age=3600";
        }
        
        # CSS, JS, Assets
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 30d;
            add_header Cache-Control "public, max-age=2592000";
        }

        # =====================================================
        # API PROXIES WITH CORS
        # =====================================================
        
        # Ollama API Proxy
        location /api/ollama/ {
            limit_req zone=ollama_limit burst=20 nodelay;
            
            # CORS Headers
            if ($cors_method = 11) {
                add_header Access-Control-Allow-Origin "*";
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
                add_header Access-Control-Max-Age 86400;
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }
            
            if ($cors_method = 1) {
                add_header Access-Control-Allow-Origin "*";
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
            }
            
            # Remove /api/ollama prefix and proxy to Ollama
            rewrite ^/api/ollama/(.*)$ /$1 break;
            proxy_pass http://ollama_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Streaming support for Ollama
            proxy_buffering off;
            proxy_cache off;
            proxy_timeout 300s;
            proxy_connect_timeout 10s;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            
            # SSE Support
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            chunked_transfer_encoding off;
        }

        # Direct Redis Commands (for complex operations)
        location /api/redis-cmd {
            limit_req zone=redis_limit burst=30 nodelay;
            
            # CORS Headers
            if ($cors_method = 11) {
                add_header Access-Control-Allow-Origin "*";
                add_header Access-Control-Allow-Methods "POST, OPTIONS";
                add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
                add_header Access-Control-Max-Age 86400;
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }
            
            if ($cors_method = 1) {
                add_header Access-Control-Allow-Origin "*";
                add_header Access-Control-Allow-Methods "POST, OPTIONS";
                add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
            }
            
            # Proxy to Redis HTTP wrapper
            proxy_pass http://redis:8001/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # HTTP wrapper specific settings
            proxy_timeout 30s;
            proxy_connect_timeout 5s;
        }

        # =====================================================
        # ERROR PAGES
        # =====================================================
        error_page 403 /unauthorized.html;
        location = /unauthorized.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        error_page 429 /rate_limited.html;
        location = /rate_limited.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        error_page 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        error_page 404 /404.html;
        location = /404.html {
            root /usr/share/nginx/html;
            internal;
        }
    }
}