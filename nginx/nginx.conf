worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

env JWT_SECRET;
env REDIS_HOST;
env REDIS_PORT;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Add Docker internal DNS resolver so container hostnames work
    resolver 127.0.0.11 ipv6=off;

    # Rate limit zone for auth
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;

    server {
        listen 80;
        server_name localhost;

        # Static files (JS, CSS, etc.)
        location /js/ {
            root /usr/local/openresty/nginx/html;
        }

        location /css/ {
            root /usr/local/openresty/nginx/html;
        }

        location /assets/ {
            root /usr/local/openresty/nginx/html;
        }

        # ------------------------------------------------
        # AUTH ENDPOINTS
        # ------------------------------------------------
        location = /api/auth/login {
            content_by_lua_block {
                local auth = require "auth"
                auth.handle_login()
            }
        }

        location = /api/auth/me {
            content_by_lua_block {
                local auth = require "auth"
                auth.handle_me()
            }
        }

        # ------------------------------------------------
        # REGISTER ENDPOINT
        # ------------------------------------------------
        location = /api/register {
            content_by_lua_block {
                local register = require "register"
                register.handle_register()
            }
        }

        # ------------------------------------------------
        # CHAT ENDPOINT
        # ------------------------------------------------
        location = /api/chat {
            content_by_lua_block {
                local chat = require "chat"
                chat.handle_chat()
            }
        }

        # ------------------------------------------------
        # ADMIN ENDPOINT
        # ------------------------------------------------
        location = /api/admin {
            content_by_lua_block {
                local admin = require "admin"
                admin.handle_admin()
            }
        }

        # ------------------------------------------------
        # Page routes
        # ------------------------------------------------
        location = / {
            try_files /index.html =404;
        }

        location = /login.html {
            try_files /login.html =404;
        }

        location = /chat.html {
            try_files /chat.html =404;
        }

        location = /admin.html {
            try_files /admin.html =404;
        }

        location = /register.html {
            try_files /register.html =404;
        }

        location = /rate_limit.html {
            try_files /rate_limit.html =404;
        }

        # ------------------------------------------------
        # Default fallback
        # ------------------------------------------------
        location / {
            try_files $uri $uri/ =404;
        }
    }
}
