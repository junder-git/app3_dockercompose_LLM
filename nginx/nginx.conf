# nginx/nginx.conf - Updated configuration with proper guest API support
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

env JWT_SECRET;
env REDIS_HOST;
env REDIS_PORT;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    resolver 127.0.0.11 ipv6=off;
    lua_package_path "/usr/local/openresty/nginx/lua/?.lua;;";
    
    # Shared memory zones
    lua_shared_dict guest_sessions 10m;
    lua_shared_dict sse_sessions 5m;

    server {
        listen 80;
        server_name localhost;
        
        # FIXED: ALL REQUIRED VARIABLES - Must be declared here
        set $username '';
        set $user_type '';
        set $guest_slot_number '';
        set $guest_slot_requested '';

        # STATIC ASSETS - No auth required
        location /js/ {
            root /usr/local/openresty/nginx/dynamic_content;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        location /css/ {
            root /usr/local/openresty/nginx/dynamic_content;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        location /static/ {
            root /usr/local/openresty/nginx/dynamic_content;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Handle missing source maps gracefully
        location ~* \.map$ {
            return 404;
            log_not_found off;
            access_log off;
        }

        # TEMPLATE-BASED ROUTES
        location = /login {
            content_by_lua_block {
                local is_who = require "is_who"
                is_who.handle_login_page()
            }
        }
        
        location = /register {
            content_by_lua_block {
                local is_who = require "is_who"
                is_who.handle_register_page()
            }
        }

        # INDEX WITH TEMPLATE SYSTEM
        location = / {
            content_by_lua_block {
                local is_who = require "is_who"
                is_who.handle_index_page()
            }
        }
        
        # CHAT SPA ROUTE - With auto-guest functionality
        location = /chat {
            content_by_lua_block {
                local is_who = require "is_who"
                is_who.route_to_handler("chat")
            }
        }
        
        # DASH SPA ROUTE
        location = /dash {
            content_by_lua_block {
                local is_who = require "is_who"
                is_who.route_to_handler("dash")
            }
        }
        
        # PENDING ROUTE (alias for dash for pending users)
        location = /pending {
            content_by_lua_block {
                local is_who = require "is_who"
                is_who.route_to_handler("dash")
            }
        }

        # API ROUTES
        location ~ ^/api/auth/ {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            
            lua_need_request_body on;
            content_by_lua_block {
                local is_who = require "is_who"
                is_who.handle_auth_api()
            }
        }

        location = /api/register {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            
            lua_need_request_body on;
            content_by_lua_block {
                local is_who = require "is_who"
                is_who.handle_register_api()
            }
        }

        location ~ ^/api/admin/ {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            
            lua_need_request_body on;
            content_by_lua_block {
                local is_who = require "is_who"
                is_who.handle_admin_api()
            }
        }

        # GUEST API - FIXED: Now properly handles guest session creation
        location ~ ^/api/guest/ {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            
            lua_need_request_body on;
            content_by_lua_block {
                local is_who = require "is_who"
                is_who.handle_guest_api()
            }
        }

        # CHAT API - Simple delegation to is_who routing
        location ~ ^/api/chat/ {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            
            add_header 'Cache-Control' 'no-cache';
            add_header 'Connection' 'keep-alive';
            
            lua_need_request_body on;
            content_by_lua_block {
                -- Use the same routing logic as chat page, but for API
                local is_who = require "is_who"
                is_who.route_to_handler("chat_api")
            }
        }

        # ERROR PAGES
        error_page 404 @custom_404;
        error_page 429 @custom_429;
        error_page 500 502 503 504 @custom_50x;
        
        location @custom_404 {
            internal;
            content_by_lua_block {
                local is_who = require "is_who"
                is_who.handle_404_page()
            }
        }

        location @custom_429 {
            internal;
            content_by_lua_block {
                local is_who = require "is_who"
                is_who.handle_429_page()
            }
        }
        
        location @custom_50x {
            internal;
            content_by_lua_block {
                local is_who = require "is_who"
                is_who.handle_50x_page()
            }
        }

        # CATCH-ALL for unknown routes
        location / {
            content_by_lua_block {
                local is_who = require "is_who"
                is_who.handle_404_page()
            }
        }
    }
}