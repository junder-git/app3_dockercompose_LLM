# nginx/nginx.conf - FIXED FOR REAL STREAMING
worker_processes auto;
error_log /var/log/nginx/error.log info;  # Changed to info for better debugging
pid /var/run/nginx.pid;

env JWT_SECRET;
env REDIS_HOST;
env REDIS_PORT;
env OLLAMA_URL;
env OLLAMA_MODEL;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    # CRITICAL: Disable ALL buffering for streaming
    sendfile        off;  # DISABLED for streaming
    tcp_nopush      off;  # DISABLED for streaming
    tcp_nodelay     on;   # ENABLED for immediate delivery
    keepalive_timeout  65;

    # STREAMING: No buffering anywhere
    proxy_buffering off;
    proxy_request_buffering off;
    proxy_http_version 1.1;
    proxy_read_timeout 600s;  # 10 minute timeout
    proxy_send_timeout 600s;
    
    # STREAMING: No compression for SSE
    gzip off;  # DISABLED - gzip breaks streaming
    
    resolver 127.0.0.11 ipv6=off;
    lua_package_path "/usr/local/openresty/nginx/lua/?.lua;;";
    
    # STREAMING: Lua settings
    lua_socket_keepalive_timeout 600s;
    lua_socket_read_timeout 600s;
    lua_socket_send_timeout 600s;
    
    # Shared memory zones
    lua_shared_dict guest_toggle 64k;
    lua_shared_dict guest_sessions 10m;
    lua_shared_dict sse_sessions 5m;

    server {
        listen 80;
        server_name localhost;
        
        # Required variables
        set $username '';
        set $user_type '';
        set $guest_slot_number '';
        set $guest_slot_requested '';

        # STATIC ASSETS
        location /js/ {
            root /usr/local/openresty/nginx/dynamic_content;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        location /css/ {
            root /usr/local/openresty/nginx/dynamic_content;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        location /static/ {
            root /usr/local/openresty/nginx/dynamic_content;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        location ~* \.map$ {
            return 404;
            log_not_found off;
            access_log off;
        }

        # TEMPLATE-BASED ROUTES
        location = /login {
            content_by_lua_block {
                local is_who = require "is_who"
                is_who.handle_login_page()
            }
        }
        
        location = /register {
            content_by_lua_block {
                local is_who = require "is_who"
                is_who.handle_register_page()
            }
        }

        location = / {
            content_by_lua_block {
                local is_who = require "is_who"
                is_who.handle_index_page()
            }
        }
        
        location = /chat {
            content_by_lua_block {
                local is_who = require "is_who"
                is_who.route_to_handler("chat")
            }
        }
        
        location = /dash {
            content_by_lua_block {
                local is_who = require "is_who"
                is_who.route_to_handler("dash")
            }
        }
        
        location = /pending {
            content_by_lua_block {
                local is_who = require "is_who"
                is_who.route_to_handler("dash")
            }
        }

        # API ROUTES
        location ~ ^/api/auth/ {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            
            lua_need_request_body on;
            content_by_lua_block {
                local is_who = require "is_who"
                is_who.handle_auth_api()
            }
        }

        location = /api/register {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            
            lua_need_request_body on;
            content_by_lua_block {
                local is_who = require "is_who"
                is_who.handle_register_api()
            }
        }

        location ~ ^/api/admin/ {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            
            lua_need_request_body on;
            content_by_lua_block {
                local is_who = require "is_who"
                is_who.handle_admin_api()
            }
        }

        location ~ ^/api/guest/ {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            
            lua_need_request_body on;
            content_by_lua_block {
                local is_who = require "is_who"
                is_who.handle_guest_api()
            }
        }

        # CHAT API - COMPLETELY FIXED FOR STREAMING
        location ~ ^/api/chat/ {
            # CORS headers
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            
            # CRITICAL: Complete streaming configuration
            chunked_transfer_encoding on;      # Enable chunked encoding
            lua_need_request_body on;
            lua_check_client_abort on;         # Check if client disconnects
            
            content_by_lua_block {
                local is_who = require "is_who"
                is_who.route_to_handler("chat_api")
            }
        }

        # ERROR PAGES
        error_page 404 @custom_404;
        error_page 429 @custom_429;
        error_page 500 502 503 504 @custom_50x;
        
        location @custom_404 {
            internal;
            content_by_lua_block {
                local is_who = require "is_who"
                is_who.handle_404_page()
            }
        }

        location @custom_429 {
            internal;
            content_by_lua_block {
                local is_who = require "is_who"
                is_who.handle_429_page()
            }
        }
        
        location @custom_50x {
            internal;
            content_by_lua_block {
                local is_who = require "is_who"
                is_who.handle_50x_page()
            }
        }

        location / {
            content_by_lua_block {
                local is_who = require "is_who"
                is_who.handle_404_page()
            }
        }
    }
}