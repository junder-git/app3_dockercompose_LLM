user nginx;
worker_processes auto;
pid /var/run/nginx.pid;
error_log /var/log/nginx/error.log warn;

events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;

    # Basic settings - IPv4 only
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 300;
    types_hash_max_size 2048;
    server_tokens off;
    client_max_body_size 50M;

    # FIXED: Reasonable timeouts but still long for AI responses
    proxy_connect_timeout 60s;            # 1 minute to connect
    proxy_send_timeout 600s;              # 10 minutes send timeout
    proxy_read_timeout 600s;              # 10 minutes read timeout
    
    # GZIP Configuration
    gzip on;
    gzip_vary on;
    gzip_min_length 256;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        application/json
        application/xml;

    # Security Headers - NO JAVASCRIPT ALLOWED
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    add_header Content-Security-Policy "default-src 'self'; style-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net; img-src 'self' data:; font-src 'self' https://cdn.jsdelivr.net; script-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net; connect-src 'self'" always;
    
    # Trust Cloudflare IPs for real IP detection (IPv4 only) - RESTORED
    set_real_ip_from 103.21.244.0/22;
    set_real_ip_from 103.22.200.0/22;
    set_real_ip_from 103.31.4.0/22;
    set_real_ip_from 104.16.0.0/13;
    set_real_ip_from 104.24.0.0/14;
    set_real_ip_from 108.162.192.0/18;
    set_real_ip_from 131.0.72.0/22;
    set_real_ip_from 141.101.64.0/18;
    set_real_ip_from 162.158.0.0/15;
    set_real_ip_from 172.64.0.0/13;
    set_real_ip_from 173.245.48.0/20;
    set_real_ip_from 188.114.96.0/20;
    set_real_ip_from 190.93.240.0/20;
    set_real_ip_from 197.234.240.0/22;
    set_real_ip_from 198.41.128.0/17;
    real_ip_header CF-Connecting-IP;
    
    # FIXED: Rate limiting zones with proper sizes - RESTORED
    limit_req_zone $binary_remote_addr zone=login_limit:10m rate=500r/m;
    limit_req_zone $binary_remote_addr zone=chat_limit:10m rate=6000r/m;
    limit_req_zone $binary_remote_addr zone=general_limit:10m rate=1000r/m;
    limit_req_status 429;

    # IPv4-only IP Whitelisting - RESTORED
    geo $allowed_ip {
        default 0;                      # Deny all by default
        127.0.0.1/32 1;               # Allow localhost
        192.168.0.0/16 1;             # Allow private network 192.168.x.x
        10.0.0.0/8 1;                 # Allow private network 10.x.x.x
        172.16.0.0/12 1;              # Allow private network 172.16-31.x.x
        # Add your specific public IPs here:
        # YOUR_HOME_IP/32 1;          # Replace with your home IP
        # YOUR_OFFICE_IP/32 1;        # Replace with your office IP
        # Cloudflare IP ranges (if using Cloudflare proxy):
        103.21.244.0/22 1;
        103.22.200.0/22 1;
        103.31.4.0/22 1;
        104.16.0.0/13 1;
        104.24.0.0/14 1;
        108.162.192.0/18 1;
        131.0.72.0/22 1;
        141.101.64.0/18 1;
        162.158.0.0/15 1;
        172.64.0.0/13 1;
        173.245.48.0/20 1;
        188.114.96.0/20 1;
        190.93.240.0/20 1;
        197.234.240.0/22 1;
        198.41.128.0/17 1;
    }

    # Upstream definition for better load balancing
    upstream quart_backend {
        server quart-app:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Default server block - IPv4 only - RESTORED
    server {
        listen 80 default_server;
        server_name _;
        
        # Root directory for error pages
        root /usr/share/nginx/html;
        
        # Serve unauthorized page for invalid domains
        location / {
            return 403;
        }
        
        # Error page for invalid domains
        error_page 403 /unauthorized.html;
        location = /unauthorized.html {
            root /usr/share/nginx/html;
            internal;
        }
    }

    # Main server block - IPv4 only for authorized domains - RESTORED
    server {
        listen 80;
        server_name localhost ai.junder.uk;  # ONLY these domains allowed
        
        # IP Access Control - Return 403 for blocked IPs - RESTORED
        if ($allowed_ip = 0) {
            return 403;
        }

        # Root directory for static files
        root /usr/share/nginx/html;

        # Static files - RESTORED
        location /static/ {
            alias /usr/share/nginx/html/static/;
            expires 30d;
            add_header Cache-Control "public, max-age=2592000";
        }
        
        # Health check endpoint (no rate limiting) - FIXED timeout
        location /health {
            access_log off;
            proxy_pass http://quart_backend/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # Accept Cloudflare headers for HTTPS termination
            proxy_set_header X-Forwarded-Ssl on;
            proxy_set_header X-Forwarded-Port 443;
            
            # Short timeouts for health checks
            proxy_connect_timeout 10s;
            proxy_send_timeout 15s;
            proxy_read_timeout 15s;
        }
        
        # Chat endpoint - STREAMING with long timeouts - RESTORED
        location /chat {
            limit_req zone=chat_limit burst=1000 nodelay;
            
            proxy_pass http://quart_backend/chat;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # Accept Cloudflare headers for HTTPS termination
            proxy_set_header X-Forwarded-Ssl on;
            proxy_set_header X-Forwarded-Port 443;
            
            # CRITICAL: Chunked response settings - RESTORED
            proxy_buffering off;
            proxy_cache off;
            proxy_request_buffering off;
            
            # Headers for chunked response - RESTORED
            proxy_set_header Connection "";
            proxy_http_version 1.1;
            
            # LONG timeouts for streaming - RESTORED but reasonable
            proxy_connect_timeout 60s;
            proxy_send_timeout 600s;          # 10 minutes
            proxy_read_timeout 600s;          # 10 minutes
        }
        
        # Authentication endpoints - RESTORED
        location ~ ^/(login|register|logout)$ {
            limit_req zone=login_limit burst=100 nodelay;
            
            proxy_pass http://quart_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # Accept Cloudflare headers for HTTPS termination
            proxy_set_header X-Forwarded-Ssl on;
            proxy_set_header X-Forwarded-Port 443;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # Admin endpoints - RESTORED
        location /admin {
            limit_req zone=general_limit burst=200 nodelay;
            
            proxy_pass http://quart_backend/admin;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # Accept Cloudflare headers for HTTPS termination
            proxy_set_header X-Forwarded-Ssl on;
            proxy_set_header X-Forwarded-Port 443;
            
            # LONG timeouts for admin operations - RESTORED but reasonable
            proxy_connect_timeout 60s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }
        
        # All other requests - RESTORED
        location / {
            limit_req zone=general_limit burst=500 nodelay;
            
            proxy_pass http://quart_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # Accept Cloudflare headers for HTTPS termination
            proxy_set_header X-Forwarded-Ssl on;
            proxy_set_header X-Forwarded-Port 443;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
        }
        
        # Block access to sensitive paths - RESTORED
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Error pages for this domain - RESTORED + ADDED 50x
        error_page 403 /unauthorized.html;
        location = /unauthorized.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        error_page 429 /rate_limited.html;
        location = /rate_limited.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        error_page 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
    }
}