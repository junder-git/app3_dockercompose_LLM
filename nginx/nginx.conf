# nginx/nginx.conf - Configuration with EXTENDED timeouts for AI responses

user nginx;
worker_processes auto;
pid /var/run/nginx.pid;
error_log /var/log/nginx/error.log warn;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Log format with real IP (Cloudflare passes real IP in CF-Connecting-IP header)
    log_format main '$http_cf_connecting_ip - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;
    client_max_body_size 10M;

    # EXTENDED timeouts for AI model responses (3x longer)
    proxy_connect_timeout 180s;           # Increased from 60s
    proxy_send_timeout 900s;              # Increased from 600s (15 minutes)
    proxy_read_timeout 900s;              # Increased from 600s (15 minutes)
    
    # Trust Cloudflare IPs for real IP detection
    set_real_ip_from 103.21.244.0/22;
    set_real_ip_from 103.22.200.0/22;
    set_real_ip_from 103.31.4.0/22;
    set_real_ip_from 104.16.0.0/13;
    set_real_ip_from 104.24.0.0/14;
    set_real_ip_from 108.162.192.0/18;
    set_real_ip_from 131.0.72.0/22;
    set_real_ip_from 141.101.64.0/18;
    set_real_ip_from 162.158.0.0/15;
    set_real_ip_from 172.64.0.0/13;
    set_real_ip_from 173.245.48.0/20;
    set_real_ip_from 188.114.96.0/20;
    set_real_ip_from 190.93.240.0/20;
    set_real_ip_from 197.234.240.0/22;
    set_real_ip_from 198.41.128.0/17;
    set_real_ip_from 2400:cb00::/32;
    set_real_ip_from 2606:4700::/32;
    set_real_ip_from 2803:f800::/32;
    set_real_ip_from 2405:b500::/32;
    set_real_ip_from 2405:8100::/32;
    set_real_ip_from 2c0f:f248::/32;
    set_real_ip_from 2a06:98c0::/29;
    real_ip_header CF-Connecting-IP;

    # GZIP Configuration
    gzip on;
    gzip_vary on;
    gzip_min_length 256;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/html
        application/json
        application/xml;

    # Security Headers - NO JAVASCRIPT ALLOWED
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    add_header Content-Security-Policy "default-src 'self'; style-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net; img-src 'self' data:; font-src 'self' https://cdn.jsdelivr.net; script-src 'none'" always;

    # Rate Limiting Zones (more conservative)
    limit_req_zone $binary_remote_addr zone=general_limit:10m rate=30r/m;   # Reduced from 60r/m
    limit_req_zone $binary_remote_addr zone=login_limit:10m rate=3r/m;      # Reduced from 5r/m
    limit_req_zone $binary_remote_addr zone=chat_limit:10m rate=5r/m;       # Reduced from 10r/m
    limit_req_status 429;

    # IP Whitelisting Configuration
    # ALLOW ALL - Current setting
    geo $allowed_ip {
        default 1;  # Allow all IPs
    }
    
    # RESTRICT ACCESS - Uncomment and modify the block below to enable IP restrictions:
    # geo $allowed_ip {
    #     default 0;                      # Deny all by default
    #     127.0.0.1/32 1;               # Allow localhost
    #     192.168.0.0/16 1;             # Allow private network 192.168.x.x
    #     10.0.0.0/8 1;                 # Allow private network 10.x.x.x
    #     172.16.0.0/12 1;              # Allow private network 172.16-31.x.x
    #     YOUR_PUBLIC_IP/32 1;          # Replace with your specific public IP
    #     YOUR_OFFICE_SUBNET/24 1;      # Replace with your office subnet
    # }

    # Default server block for invalid domains
    server {
        listen 80 default_server;
        server_name _;
        
        location / {
            return 444; # Close connection without response
        }
    }

    # Main server block
    server {
        listen 80;
        server_name localhost _;
        
        # IP Access Control - Return 403 for blocked IPs
        if ($allowed_ip = 0) {
            return 403;
        }

        # Root directory for static files
        root /usr/share/nginx/html;

        # Static CSS files only (no JavaScript allowed)
        location /static/css/ {
            alias /usr/share/nginx/html/static/css/;
            expires 30d;
            add_header Cache-Control "public, max-age=2592000";
        }
        
        # Block any JavaScript files
        location ~* \.js$ {
            return 403;
        }
        
        # Chat chunked response endpoint - EXTENDED TIMEOUTS
        location /chat {
            # Only for POST requests (form submissions)
            limit_req zone=chat_limit burst=2 nodelay;  # Reduced burst
            
            proxy_pass http://quart-app:8000/chat;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $http_cf_connecting_ip;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CRITICAL: Chunked response settings
            proxy_buffering off;
            proxy_cache off;
            proxy_request_buffering off;
            
            # Headers for chunked response
            proxy_set_header Connection "";
            proxy_http_version 1.1;
            
            # MASSIVELY extended timeouts for AI responses
            proxy_connect_timeout 180s;   # 3 minutes to connect
            proxy_send_timeout 900s;      # 15 minutes to send
            proxy_read_timeout 900s;      # 15 minutes to read response
        }
        
        # Authentication endpoints with strict rate limiting
        location ~ ^/(login|register|logout)$ {
            limit_req zone=login_limit burst=2 nodelay;  # Reduced burst
            
            proxy_pass http://quart-app:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $http_cf_connecting_ip;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # All other requests go to Quart (templates, forms, etc.)
        location / {
            limit_req zone=general_limit burst=5 nodelay;  # Reduced burst
            
            proxy_pass http://quart-app:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $http_cf_connecting_ip;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Standard timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 180s;      # Slightly increased
            proxy_read_timeout 180s;      # Slightly increased
        }
        
        # Health check endpoint (no rate limiting)
        location /health {
            access_log off;
            proxy_pass http://quart-app:8000/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $http_cf_connecting_ip;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Block access to sensitive paths
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Error pages
        error_page 403 /unauthorized.html;
        location = /unauthorized.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        error_page 429 /rate_limited.html;
        location = /rate_limited.html {
            root /usr/share/nginx/html;
            internal;
        }
    }
}