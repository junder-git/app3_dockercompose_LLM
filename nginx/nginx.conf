# nginx/nginx.conf - Fixed configuration

# Load modules
load_module modules/ngx_http_js_module.so;
load_module modules/ngx_http_redis2_module.so;

user nginx;
worker_processes auto;
worker_rlimit_nofile 65536;
pid /var/run/nginx.pid;
error_log /var/log/nginx/error.log warn;

events {
    worker_connections 8192;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Load JavaScript modules
    js_import auth from /etc/nginx/njs/auth.js;
    js_import database from /etc/nginx/njs/database.js;
    js_import utils from /etc/nginx/njs/utils.js;
    js_import init from /etc/nginx/njs/init.js;

    # Set variables for configuration
    js_set $admin_username auth.getAdminUsername;
    js_set $max_pending_users auth.getMaxPendingUsers;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time';
    
    access_log /var/log/nginx/access.log main;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;
    client_max_body_size 10M;
    
    # Proxy timeout settings
    proxy_connect_timeout 300s;
    proxy_send_timeout 300s;
    proxy_read_timeout 300s;
    proxy_buffering off;
    proxy_cache off;
    
    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=10r/m;
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=100r/m;
    limit_req_zone $binary_remote_addr zone=ollama_limit:10m rate=50r/m;
    
    limit_req_status 429;

    # Upstream definitions
    upstream ollama_backend {
        server ollama:11434;
        keepalive 32;
    }
    
    upstream redis_backend {
        server redis:6379;
        keepalive 32;
    }

    server {
        listen 80 default_server;
        server_name localhost ai.junder.uk;
        
        root /usr/share/nginx/html;
        index index.html;

        # Security Headers
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # =====================================================
        # INTERNAL AUTH SUBREQUEST
        # =====================================================
        
        location = /auth {
            internal;
            js_content auth.verifyToken;
        }

        # =====================================================
        # INTERNAL REDIS ENDPOINTS (for njs)
        # =====================================================
        
        # Redis GET operation
        location ~ ^/redis-internal/get/(.+)$ {
            internal;
            redis2_query get $1;
            redis2_pass redis_backend;
        }

        # Redis SET operation
        location ~ ^/redis-internal/set/([^/]+)/(.*)$ {
            internal;
            redis2_query set $1 $2;
            redis2_pass redis_backend;
        }

        # Redis SETEX operation  
        location ~ ^/redis-internal/setex/([^/]+)/([^/]+)/(.*)$ {
            internal;
            redis2_query setex $1 $2 $3;
            redis2_pass redis_backend;
        }

        # Redis HGET operation
        location ~ ^/redis-internal/hget/([^/]+)/(.+)$ {
            internal;
            redis2_query hget $1 $2;
            redis2_pass redis_backend;
        }

        # Redis HSET operation
        location ~ ^/redis-internal/hset/([^/]+)/([^/]+)/(.*)$ {
            internal;
            redis2_query hset $1 $2 $3;
            redis2_pass redis_backend;
        }

        # Redis HGETALL operation
        location ~ ^/redis-internal/hgetall/(.+)$ {
            internal;
            redis2_query hgetall $1;
            redis2_pass redis_backend;
        }

        # Redis SMEMBERS operation
        location ~ ^/redis-internal/smembers/(.+)$ {
            internal;
            redis2_query smembers $1;
            redis2_pass redis_backend;
        }

        # Redis SADD operation
        location ~ ^/redis-internal/sadd/([^/]+)/(.+)$ {
            internal;
            redis2_query sadd $1 $2;
            redis2_pass redis_backend;
        }

        # Redis SREM operation
        location ~ ^/redis-internal/srem/([^/]+)/(.+)$ {
            internal;
            redis2_query srem $1 $2;
            redis2_pass redis_backend;
        }

        # Redis INCR operation
        location ~ ^/redis-internal/incr/(.+)$ {
            internal;
            redis2_query incr $1;
            redis2_pass redis_backend;
        }

        # Redis EXISTS operation
        location ~ ^/redis-internal/exists/(.+)$ {
            internal;
            redis2_query exists $1;
            redis2_pass redis_backend;
        }

        # Redis DEL operation
        location ~ ^/redis-internal/del/(.+)$ {
            internal;
            redis2_query del $1;
            redis2_pass redis_backend;
        }

        # Redis PING operation
        location /redis-internal/ping {
            internal;
            redis2_query ping;
            redis2_pass redis_backend;
        }

        # Redis FLUSHDB operation (dangerous!)
        location /redis-internal/flushdb {
            internal;
            redis2_query flushdb;
            redis2_pass redis_backend;
        }

        # Generic Redis command endpoint for complex operations
        location /redis-internal/command {
            internal;
            js_content database.handleRedisCommand;
        }

        # =====================================================
        # STATIC FILES AND MAIN ROUTES
        # =====================================================
        
        # Static assets (CSS, JS, images)
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 30d;
            add_header Cache-Control "public, max-age=2592000";
            try_files $uri =404;
        }

        # JavaScript library files
        location /js/lib/ {
            expires 30d;
            add_header Cache-Control "public, max-age=2592000";
            try_files $uri =404;
        }

        # CSS files
        location /css/ {
            expires 1h;
            add_header Cache-Control "public, max-age=3600";
            try_files $uri =404;
        }

        # =====================================================
        # PUBLIC API ENDPOINTS (No Auth Required)
        # =====================================================
        
        # Public auth endpoints
        location /api/auth/login {
            limit_req zone=auth_limit burst=5 nodelay;
            js_content auth.handleLogin;
        }

        location /api/auth/register {
            limit_req zone=auth_limit burst=5 nodelay;
            js_content auth.handleRegister;
        }

        location /api/auth/verify {
            js_content auth.verifyTokenEndpoint;
        }

        # System initialization endpoint
        location /api/init {
            js_content init.handleInitEndpoint;
        }

        # Health check
        location /health {
            js_content utils.healthCheck;
        }

        # =====================================================
        # PROTECTED API ENDPOINTS
        # =====================================================
        
        location ~ ^/api/(admin|chat|database)/ {
            limit_req zone=api_limit burst=20 nodelay;
            
            # Require authentication for protected API calls
            auth_request /auth;
            auth_request_set $user_id $upstream_http_x_user_id;
            auth_request_set $username $upstream_http_x_username;
            auth_request_set $is_admin $upstream_http_x_is_admin;
            
            # Route to appropriate handlers based on the first path segment
            location ~ ^/api/admin/ {
                # Admin endpoints require admin privileges
                if ($is_admin != "true") {
                    return 403;
                }
                js_content auth.handleAdminRequest;
            }
            
            location ~ ^/api/chat/ {
                js_content database.handleChatRequest;
            }
            
            location ~ ^/api/database/ {
                js_content database.handleDatabaseRequest;
            }
        }

        # =====================================================
        # OLLAMA PROXY (Protected)
        # =====================================================
        
        location /api/ollama/ {
            limit_req zone=ollama_limit burst=20 nodelay;
            
            auth_request /auth;
            auth_request_set $user_id $upstream_http_x_user_id;
            
            rewrite ^/api/ollama/(.*)$ /$1 break;
            proxy_pass http://ollama_backend;
            proxy_set_header X-User-ID $user_id;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # Streaming support
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Individual timeout settings
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # Disable buffering for streaming
            proxy_buffering off;
            proxy_cache off;
            proxy_request_buffering off;
        }

        # =====================================================
        # PUBLIC PAGES (No Auth Required)
        # =====================================================
        
        # Root/index page
        location = / {
            try_files /index.html =404;
        }

        # Login page
        location = /login {
            try_files /login.html =404;
        }

        # Register page  
        location = /register {
            try_files /register.html =404;
        }

        # Error pages (public)
        location = /404.html {
            internal;
        }
        
        location = /50x.html {
            internal;
        }
        
        location = /unauthorized.html {
            internal;
        }
        
        location = /rate_limited.html {
            internal;
        }

        # =====================================================
        # PROTECTED PAGES (Auth Required)
        # =====================================================
        
        # Chat page
        location = /chat {
            auth_request /auth;
            try_files /chat.html =404;
        }

        # Admin page
        location = /admin {
            auth_request /auth;
            auth_request_set $is_admin $upstream_http_x_is_admin;
            
            if ($is_admin != "true") {
                return 403;
            }
            
            try_files /admin.html =404;
        }

        # User detail page
        location = /user-detail {
            auth_request /auth;
            auth_request_set $is_admin $upstream_http_x_is_admin;
            
            if ($is_admin != "true") {
                return 403;
            }
            
            try_files /user-detail.html =404;
        }

        # =====================================================
        # ERROR PAGES
        # =====================================================
        
        error_page 401 403 /unauthorized.html;
        error_page 429 /rate_limited.html;
        error_page 502 503 504 /50x.html;
        error_page 404 /404.html;

        # =====================================================
        # FALLBACK FOR ANY OTHER REQUESTS
        # =====================================================
        
        # Handle any other requests that don't match above patterns
        location / {
            # For requests that look like they should be files, return 404
            if ($uri ~* \.(html|htm|php|asp|jsp)$) {
                return 404;
            }
            
            # For other requests, try to serve the file or return 404
            try_files $uri $uri/ =404;
        }
    }
}